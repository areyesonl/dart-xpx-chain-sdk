part of xpx_catapult_sdk;

// ignore: unused_element
class _abstractTransactionDTO  {
	int Type;
  int Version;
	UInt64DTO Fee;
  UInt64DTO Deadline;
	String Signature;
  String Signer;
}

class _transferTransactionInfoDTO {
  _metaTransferDTO _meta;
  _transferTransactionDTO _transaction;

  Autogenerated({_metaTransferDTO meta, _transferTransactionDTO transaction}) {
    this._meta = meta;
    this._transaction = transaction;
  }

  _metaTransferDTO get meta => _meta;
  set meta(_metaTransferDTO meta) => _meta = meta;
  _transferTransactionDTO get transaction => _transaction;
  set transaction(_transferTransactionDTO transaction) => _transaction = transaction;

  _transferTransactionInfoDTO.fromJson(Map<String, dynamic> json) {
    _meta = json['meta'] != null ? new _metaTransferDTO.fromJson(json['meta']) : null;
    _transaction = json['transaction'] != null
        ? new _transferTransactionDTO.fromJson(json['transaction'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this._meta != null) {
      data['meta'] = this._meta.toJson();
    }
    if (this._transaction != null) {
      data['transaction'] = this._transaction.toJson();
    }
    return data;
  }
}

class _metaTransferDTO {
  UInt64DTO _height;
  String _hash;
  String _merkleComponentHash;
  int _index;
  String _id;

  _metaTransferDTO(
      {List<int> height,
        String hash,
        String merkleComponentHash,
        int index,
        String id}) {
    this._height = UInt64DTO.fromJson(height);
    this._hash = hash;
    this._merkleComponentHash = merkleComponentHash;
    this._index = index;
    this._id = id;
  }

  _metaTransferDTO.fromJson(Map<String, dynamic> json) {
    _height = UInt64DTO.fromJson(json['height']);
    _hash = json['hash'];
    _merkleComponentHash = json['merkleComponentHash'];
    _index = json['index'];
    _id = json['id'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['height'] = this._height;
    data['hash'] = this._hash;
    data['merkleComponentHash'] = this._merkleComponentHash;
    data['index'] = this._index;
    data['id'] = this._id;
    return data;
  }
}

class _transferTransactionDTO extends _abstractTransactionDTO {
  String _recipient;
  List<_mosaicDTO> _mosaics;
  _messageDTO _message;

  _transferTransactionDTO(
      {String signature,
        String signer,
        int version,
        int type,
        List<int> maxFee,
        List<int> deadline,
        String recipient,
        List<_mosaicDTO> mosaics,
        _messageDTO message}) {
    this.Signature = signature;
    this.Signer = signer;
    this.Version = version;
    this.Type = type;
    this.Fee = UInt64DTO.fromJson(maxFee);
    this.Deadline = UInt64DTO.fromJson(deadline);
    this._recipient = recipient;
    this._mosaics = mosaics;
    this._message = message;
  }

  _transferTransactionDTO.fromJson(Map<String, dynamic> json) {
    this.Signature = json['signature'];
    this.Signer = json['signer'];
    this.Version = json['version'];
    this.Type = json['type'];
    this.Fee = UInt64DTO.fromJson(json['maxFee']);
    this.Deadline = UInt64DTO.fromJson(json['deadline']);
    _recipient = json['recipient'];
    if (json['mosaics'] != null) {
      _mosaics = new List<_mosaicDTO>();
      json['mosaics'].forEach((v) {
        _mosaics.add(new _mosaicDTO.fromJson(v));
      });
    }
    this._message = json['message'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['signature'] = this.Signature;
    data['signer'] = this.Signer;
    data['version'] = this.Version;
    data['type'] = this.Type;
    data['maxFee'] = this.Fee;
    data['deadline'] = this.Deadline;
    data['recipient'] = this._recipient;
    if (this._mosaics != null) {
      data['mosaics'] = this._mosaics.map((v) => v.toJson()).toList();
    }
    data['message'] = this._message;
    return data;
  }
}

class _transactionStatusDTO {
  String group = null;

  String status = null;

  String hash = null;

  UInt64DTO deadline = null;

  UInt64DTO height = null;

  _transactionStatusDTO();

  @override
  String toString() {
    return 'TransactionStatusDTO[group=$group, status=$status, hash=$hash, deadline=$deadline, height=$height, ]';
  }

  _transactionStatusDTO.fromJson(Map<String, dynamic> json) {
    if (json == null) return;
    group = json['group'];
    status = json['status'];
    hash = json['hash'];
    deadline = new UInt64DTO.fromJson(json['deadline']);
    height = new UInt64DTO.fromJson(json['height']);
  }

  Map<String, dynamic> toJson() {
    return {
      'group': group,
      'status': status,
      'hash': hash,
      'deadline': deadline,
      'height': height
    };
  }

  static List<_transactionStatusDTO> listFromJson(List<dynamic> json) {
    return json == null
        ? new List<_transactionStatusDTO>()
        : json
        .map((value) => new _transactionStatusDTO.fromJson(value))
        .toList();
  }

  static Map<String, _transactionStatusDTO> mapFromJson(
      Map<String, Map<String, dynamic>> json) {
    var map = new Map<String, _transactionStatusDTO>();
    if (json != null && json.length > 0) {
      json.forEach((String key, Map<String, dynamic> value) =>
      map[key] = new _transactionStatusDTO.fromJson(value));
    }
    return map;
  }
}

// Message
class _messageDTO {
  int _type;
  String _payload;

  _messageDTO({int type, String payload}) {
    this._type = type;
    this._payload = payload;
  }

  int get type => _type;
  set type(int type) => _type = type;
  String get payload => _payload;
  set payload(String payload) => _payload = payload;

  _messageDTO.fromJson(Map<String, dynamic> json) {
    _type = json['Type'];
    _payload = json['Payload'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['Type'] = this._type;
    data['Payload'] = this._payload;
    return data;
  }
}